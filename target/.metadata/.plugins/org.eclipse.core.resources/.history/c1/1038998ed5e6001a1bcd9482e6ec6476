/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif


#include <stdio.h>
#include "main.h"



int main(void)
{
	RCC_AHB1ENR_t 	volatile *const pClkCtrlReg = (RCC_AHB1ENR_t*) 0x40023830;
	GPIOx_MODE_t 	volatile *const pPortDModeReg = (GPIOx_MODE_t*) 0x40020C00;
	GPIOx_ODR_T 	volatile *const pPortDOutReg = (GPIOx_ODR_T*) 0x40020C14;

	// enable gpio peripheral d in AHB1ENR
	pClkCtrlReg->gpiod_en = CLOCK_ENABLE;

	pPortDModeReg->pin_12 = MODE_CONF_OUTPUT;

	while(1) {
		// led on
		pPortDOutReg->pin_12 = SET_HIGH;

		// wait
		for(uint32_t i=0;i < 30000; i++);

		// led off
		pPortDOutReg->pin_12 = SET_LOW;

		// wait
		for(uint32_t i=0;i < 30000; i++);

	}
}
