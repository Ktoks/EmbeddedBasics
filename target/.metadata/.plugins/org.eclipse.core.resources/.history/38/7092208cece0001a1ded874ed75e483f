/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

#include<stdio.h>
#include "main.h"


int main(void)
{
	//	uint32_t *pClockControlRegister = (uint32_t*)0x40023830;
	//	uint32_t *pPortDModeRegister = (uint32_t*)0x40020C00;
	//	uint32_t *pPortDOutRegister = (uint32_t*)0x40020C14;

	RCC_AHB1ENR_t 	volatile *const pClkCtrlReg = (RCC_AHB1ENR_t*) 0x40023830;
	GPIOx_MODE_t 	volatile *const pPortDModeReg = (GPIOx_MODE_t*) 0x40020C00;
	GPIOx_ODR_T 	volatile *const pPortDReg = (GPIOx_ODR_T*) 0x40020C14;

	// enable the clock for gpio peripheral d in AHB1ENR
	pClkCtrlReg->gpiod_en = 1;

	// configure the mode of column pins to be input
	// pins 8-11 are columns
	pPortDModeReg->pin_8 = 1;
	pPortDModeReg->pin_9 = 1;
	pPortDModeReg->pin_10 = 1;
	pPortDModeReg->pin_11 = 1;

	// configure the mode of row pins to be output
	// pins 0-3 are rows
	pPortDModeReg->pin_0 = 0;
	pPortDModeReg->pin_1 = 0;
	pPortDModeReg->pin_2 = 0;
	pPortDModeReg->pin_3 = 0;
	GPIOx_ODR_T volatile *const [4] rows = {
	  pPortDReg->pin_0,
	  pPortDReg->pin_1,
	  pPortDReg->pin_2,
	  pPortDReg->pin_3};

	while(1) {
		// initialization
		pPortDReg->pin_0 = 1;
		pPortDReg->pin_1 = 1;
		pPortDReg->pin_2 = 1;
		pPortDReg->pin_3 = 1;
		for (uint32_t i = 0; i < 4; i++ ) {

		}
	}
}
